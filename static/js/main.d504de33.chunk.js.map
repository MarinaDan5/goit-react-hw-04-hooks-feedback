{"version":3,"sources":["components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/FeedbackOptions/FeedbackOptions.js","App.js","index.js"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positiveFeedback","className","Notification","message","FeedbackOptions","this","props","options","handleIncrement","map","option","type","value","onClick","Component","App","state","setState","prevState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","result","percentage","Math","round","keys","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"gSAeeA,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,6BAAKD,IACJC,MCgBQC,EApBI,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,KAAMC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBAC/C,OACE,qCACE,oBAAGC,UAAU,kBAAb,mBAAsCL,KACtC,oBAAGK,UAAU,iBAAb,sBAAwCJ,KACxC,oBAAGI,UAAU,iBAAb,kBAAoCH,KACpC,oBAAGG,UAAU,iBAAb,oBAAsCF,KACtC,oBAAGE,UAAU,iBAAb,gCAAkDD,EAAlD,WCGSE,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGF,UAAU,kBAAb,SAAgCE,OCFhCC,G,kKACJ,WACE,MAAqCC,KAAKC,MAAlCC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,gBACjB,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACET,UAAU,cAEVU,KAAK,SACLC,MAAOF,EACPG,QAAS,kBAAML,EAAgBE,IALjC,SAOGA,GALIA,Y,GARaI,cA0BfV,ICvBTW,E,4MACJC,MAAQ,CACNpB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,gBAAkB,SAAAE,GAChB,EAAKO,UAAS,SAAAC,GAAS,sBACpBR,EAASQ,EAAUR,GAAU,O,EAIlCS,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKL,OAAOM,QAAO,SAACV,EAAOW,GAAR,OAAgBA,EAAMX,IAAO,I,EAEvEY,gCAAkC,WAChC,IAAMC,EAAS,EAAKN,qBAEdO,EAAqB,IADV,EAAKV,MAAdpB,KAC0B6B,EAClC,OAAOE,KAAKC,MAAMF,I,4CAGpB,WACE,IAAMnB,EAAUa,OAAOS,KAAKxB,KAAKW,OACjC,EAA+BX,KAAKW,MAA5BpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,gCACE,cAAC,EAAD,CAASL,MAAM,wBAAf,SACE,cAAC,EAAD,CACEc,QAASA,EACTC,gBAAiBH,KAAKG,oBAI1B,cAAC,EAAD,CAASf,MAAM,aAAf,SACGY,KAAKc,qBAAuB,EAC3B,cAAC,EAAD,CACEvB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOM,KAAKc,qBACZnB,iBAAkBK,KAAKmB,oCAGzB,cAAC,EAAD,CAAcrB,QAAQ,+B,GA9ChBW,aAqDHC,ICrDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,Y","file":"static/js/main.d504de33.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => {\n  return (\n    <>\n      <p className=\"statistic-item \">Good: {good}</p>\n      <p className=\"statistic-item\">Neutral: {neutral}</p>\n      <p className=\"statistic-item\">Bad: {bad}</p>\n      <p className=\"statistic-item\">Total: {total}</p>\n      <p className=\"statistic-item\">Positive feedback: {positiveFeedback}%</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p className=\"statistic-title\">{message}</p>\n    </>\n  );\n};\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './FeedbackOptions.css';\n\nclass FeedbackOptions extends Component {\n  render() {\n    const { options, handleIncrement } = this.props;\n    return (\n      <>\n        {options.map(option => (\n          <button\n            className=\"clickButton\"\n            key={option}\n            type=\"button\"\n            value={option}\n            onClick={() => handleIncrement(option)}\n          >\n            {option}\n          </button>\n        ))}\n      </>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  handleIncrement: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.oneOf(['good', 'neutral', 'bad'])),\n};\n\nexport default FeedbackOptions;\n","import React, { Component } from 'react';\n\nimport Section from './components/Section/Section';\nimport Statistic from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((value, acc) => acc + value, 0);\n  };\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  render() {\n    const options = Object.keys(this.state);\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={options}\n            handleIncrement={this.handleIncrement}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistic\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positiveFeedback={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}